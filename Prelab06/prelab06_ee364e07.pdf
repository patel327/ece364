1. 
import re

if re.search(" A{2,5} ", inputstr)
	print("input found")
else
	print("notfound")

2.

re.sub(r"[0-9]+\.[0-9]+", "float", "3.14 12.43 no 11")

3.

tuples, tuplen = re.subn(r"[0-9]+/.[0-9]+", "float", "3.14 12.43 no 11")

print(tuplen)

4.

m = re.findall(r"(\d+)", "11 notnum 4 6 2 7 5")
listm = [int(num) for num in m]
avg = sum(listm)/len(listm)

5. 

re.sub(r"EE364", "EE461", "EE364 EE364EE364 EE364 EE364", 1)

6.
actual regex for validation
"((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)"
more simple regex to check form
"(\d{1,3}\.){3}\d{1,3}"

ip = "13.3.123.123"
if re.match(r"(\d{1,3}\.){3}\d{1,3}", ip)
	print("valid ip")
else
	print("notvalid")

7.
a.
search for an "e" in the input string regradless of case
b.
search the string for an instance of "is a" regardless of position.
c.
It is just creating labels for the regex in b where the part before "is a" is First.
"is a" is labelled as Second. The part after "is a" is labelled as Third.
d.
search for one "I" with atleast 10 "like" and either 1 or 2 "you" concatanated together in the input string.

